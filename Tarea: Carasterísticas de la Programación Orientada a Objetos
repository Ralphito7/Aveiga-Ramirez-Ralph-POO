

class Habitacion:
    def __init__(self, numero, tipo, precio):
        """
        Clase que representa una habitaci√≥n de hotel.
        :param numero: N√∫mero de la habitaci√≥n.
        :param tipo: Tipo de la habitaci√≥n (e.g., 'Sencilla', 'Doble').
        :param precio: Precio por noche.
        """
        self.numero = numero
        self.tipo = tipo
        self.precio = precio
        self.ocupada = False

    def reservar(self):
        """
        Marca la habitaci√≥n como ocupada.
        """
        if self.ocupada:
            print(f"‚ö†Ô∏è La habitaci√≥n {self.numero} ya est√° reservada.")
        else:
            self.ocupada = True
            print(f"‚úÖ Habitaci√≥n {self.numero} reservada con √©xito.")

    def liberar(self):
        """
        Marca la habitaci√≥n como disponible.
        """
        if not self.ocupada:
            print(f"‚ö†Ô∏è La habitaci√≥n {self.numero} ya est√° libre.")
        else:
            self.ocupada = False
            print(f"‚úÖ Habitaci√≥n {self.numero} liberada con √©xito.")


class Hotel:
    def __init__(self, nombre):
        """
        Clase que representa un hotel.
        :param nombre: Nombre del hotel.
        """
        self.nombre = nombre
        self.habitaciones = []

    def agregar_habitacion(self, habitacion):
        """
        Agrega una habitaci√≥n al hotel.
        :param habitacion: Objeto de tipo Habitacion.
        """
        self.habitaciones.append(habitacion)

    def mostrar_habitaciones_disponibles(self):
        """
        Muestra las habitaciones que est√°n disponibles para reservar.
        """
        print(f"üè® Habitaciones disponibles en {self.nombre}:")
        disponibles = [hab for hab in self.habitaciones if not hab.ocupada]
        if disponibles:
            for hab in disponibles:
                print(f"- Habitaci√≥n {hab.numero} ({hab.tipo}) - ${hab.precio:.2f} por noche")
        else:
            print("No hay habitaciones disponibles.")

    def buscar_habitacion_por_numero(self, numero):
        """
        Busca una habitaci√≥n por su n√∫mero.
        :param numero: N√∫mero de la habitaci√≥n.
        :return: Objeto de tipo Habitacion o None si no existe.
        """
        for habitacion in self.habitaciones:
            if habitacion.numero == numero:
                return habitacion
        print(f"‚ö†Ô∏è No se encontr√≥ la habitaci√≥n {numero}.")
        return None


# Ejemplo de uso
def main():
    # Crear un hotel
    hotel = Hotel("Hotel Para√≠so")

    # Agregar habitaciones
    hotel.agregar_habitacion(Habitacion(101, "Sencilla", 50.0))
    hotel.agregar_habitacion(Habitacion(102, "Doble", 80.0))
    hotel.agregar_habitacion(Habitacion(103, "Suite", 150.0))

    # Mostrar habitaciones disponibles
    hotel.mostrar_habitaciones_disponibles()

    # Reservar una habitaci√≥n
    habitacion = hotel.buscar_habitacion_por_numero(102)
    if habitacion:
        habitacion.reservar()

    # Intentar reservar una habitaci√≥n ya ocupada
    habitacion.reservar()

    # Mostrar habitaciones disponibles nuevamente
    hotel.mostrar_habitaciones_disponibles()

    # Liberar la habitaci√≥n
    habitacion.liberar()

    # Mostrar habitaciones disponibles despu√©s de liberar
    hotel.mostrar_habitaciones_disponibles()


if __name__ == "__main__":
    main()
